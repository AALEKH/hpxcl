todo:
1. Implement device management component
	A. device management component should be able to
		1. get all devices
		2. choose which device to use
		3. run a kernel on the device
		4. transfer data between the cpu and gpu
    B. create device properties member data such as
        cur_device_id
        vector full of all devices that you can switch between

2. Find a way to generalize cuda kernels in kernel component
	A. Try to implement cuda kernels with a Template kernel class
        B. Try to use macro if that is not possible

3. Error handling
	A. handle hpx errors
	B. handle cuda errors

4. Worry about concurrency with memory transfers
   	Note: CUDA kernels are asynchronous by default
   	so I must implement a callback that allows the calling function to track when
   	the cuda kernel is ready to return so that the future knwos when to return .get()
   	memcpy is synchronous by default

5. encapsulate cuda events and streams in kernel component
